/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * JavaBackup.java
 *
 * Created on Jul 13, 2011, 1:06:20 AM
 */

package javabackup.resources;

import javax.swing.*;
import java.awt.event.*;
import java.io.*;
import java.util.*;


/**
 *
 * @author memch
 */

public class JavaBackup extends javax.swing.JFrame {
    public BackupSchedule schedule;
    private int total;
    private int progress;

    /** Creates new form JavaBackup */
    public JavaBackup() {
        initComponents();
	    jPanel1.setLayout(new javax.swing.BoxLayout(jPanel1, javax.swing.BoxLayout.Y_AXIS));
	    jProgressBar1.setValue(0);
	    jProgressBar1.setStringPainted(true);

	    schedule = new BackupSchedule();
	    this.updateFields();
    }

    // update the items in the checkbox.
    private class CheckListener implements ItemListener {
	   private String key_name;
	   private BackupSchedule cur_schedule;
	   CheckListener(String name, BackupSchedule schedule) {
		   key_name = name;
		   cur_schedule = schedule;
	   }
	   public void itemStateChanged(ItemEvent e)  {
		   cur_schedule.addBackupList(key_name, (e.getStateChange() == ItemEvent.SELECTED));
           cur_schedule.writeSchedule();
	   }
    }

    // update the fields on the gui and save the schedule object
    private void updateFields() {
		jPanel1.removeAll();
		jPanel1.add(new JLabel("Backup Schedule:"));
		jPanel1.updateUI();
		String dest_dir_name = this.schedule.getDestinationDirectory();
		if (dest_dir_name == null) {
			jLabel2.setText("Unset...");
		}
		else {
			jLabel2.setText(dest_dir_name);
		}
		TreeMap backupList = (TreeMap<String,Boolean>)schedule.getBackupList();
		Iterator it = backupList.entrySet().iterator();
		while(it.hasNext()) {
			Map.Entry entry = (Map.Entry) it.next();
			JCheckBox chk = new JCheckBox((String)entry.getKey(), (Boolean)entry.getValue());
			chk.addItemListener(new CheckListener((String)entry.getKey(), this.schedule));
			jPanel1.add(chk);
		}
		jPanel1.validate();
		jScrollPane1.validate();
		jScrollPane1.getViewport().validate();

		// dry run or sync mode
		if (schedule.dry_run_mode) {
			jLabel3.setEnabled(true);
			jLabel4.setEnabled(false);
		} else {
			jLabel4.setEnabled(true);
			jLabel3.setEnabled(false);
		}
		// delete mode
        if (schedule.delete_mode) {
            jLabel5.setEnabled(true);
        } else {
            jLabel5.setEnabled(false);
        }

		this.schedule.writeSchedule();
        this.schedule.writeProperties();

    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jFileChooser1 = new javax.swing.JFileChooser();
        jFileChooser2 = new javax.swing.JFileChooser();
        jFileChooser3 = new javax.swing.JFileChooser();
        jFileChooser4 = new javax.swing.JFileChooser();
        jButton1 = new javax.swing.JButton();
        jDestinationDescription = new javax.swing.JLabel();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jPanel1 = new javax.swing.JPanel();
        jButton4 = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTextArea1 = new javax.swing.JTextArea();
        jButton5 = new javax.swing.JButton();
        jProgressBar1 = new javax.swing.JProgressBar();
        jButton6 = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        jButton7 = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        jMenuItem2 = new javax.swing.JMenuItem();
        jMenuItem4 = new javax.swing.JMenuItem();
        jMenuItem1 = new javax.swing.JMenuItem();
        jMenu3 = new javax.swing.JMenu();
        jMenu4 = new javax.swing.JMenu();

        jFileChooser1.setFileSelectionMode(javax.swing.JFileChooser.FILES_AND_DIRECTORIES);

        jFileChooser2.setFileSelectionMode(javax.swing.JFileChooser.DIRECTORIES_ONLY);

        jFileChooser3.setDialogTitle("Save As...");
        jFileChooser3.setDialogType(javax.swing.JFileChooser.SAVE_DIALOG);

        jFileChooser4.setDialogTitle("Open schedule file");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("JavaBackup 0.1");
        setResizable(false);

        jButton1.setFont(new java.awt.Font("Tahoma", 1, 11));
        jButton1.setText("Add file or directory to list...");
        jButton1.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jDestinationDescription.setFont(new java.awt.Font("Tahoma", 1, 11));
        jDestinationDescription.setText("Destination Directory:");

        jButton2.setFont(new java.awt.Font("Tahoma", 1, 11));
        jButton2.setText("Set destination directory...");
        jButton2.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jButton3.setFont(new java.awt.Font("Calibri", 1, 11));
        jButton3.setText("Backup");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 692, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 145, Short.MAX_VALUE)
        );

        jScrollPane1.setViewportView(jPanel1);

        jButton4.setFont(new java.awt.Font("Calibri", 1, 11));
        jButton4.setText("Exit");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 11));
        jLabel1.setText("Status of Backup:");

        jTextArea1.setColumns(20);
        jTextArea1.setEditable(false);
        jTextArea1.setFont(new java.awt.Font("Courier New", 0, 12));
        jTextArea1.setRows(5);
        jScrollPane2.setViewportView(jTextArea1);

        jButton5.setFont(new java.awt.Font("Calibri", 1, 11));
        jButton5.setText("Clear");
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });

        jButton6.setFont(new java.awt.Font("Tahoma", 1, 11));
        jButton6.setText("Remove un-selected entries...");
        jButton6.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jButton6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton6ActionPerformed(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 11));
        jLabel2.setText("none");

        jButton7.setFont(new java.awt.Font("Calibri", 1, 11));
        jButton7.setText("Save");

        jLabel3.setFont(new java.awt.Font("Calibri", 1, 11));
        jLabel3.setForeground(new java.awt.Color(0, 120, 0));
        jLabel3.setText("[ Dry-Run Mode ]");
        jLabel3.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel3MouseClicked(evt);
            }
        });

        jLabel4.setFont(new java.awt.Font("Calibri", 1, 11));
        jLabel4.setForeground(new java.awt.Color(0, 0, 120));
        jLabel4.setText("[ Sync Mode ]");
        jLabel4.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel4MouseClicked(evt);
            }
        });

        jLabel5.setFont(new java.awt.Font("Calibri", 1, 11)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(120, 0, 0));
        jLabel5.setText("[ Delete Mode ]");
        jLabel5.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel5MouseClicked(evt);
            }
        });

        jMenu1.setText("File");
        jMenu1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenu1ActionPerformed(evt);
            }
        });

        jMenuItem2.setText("Load Schedule...");
        jMenuItem2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem2ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem2);

        jMenuItem4.setText("Save Schedule");
        jMenu1.add(jMenuItem4);

        jMenuItem1.setText("Exit");
        jMenuItem1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem1ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem1);

        jMenuBar1.add(jMenu1);

        jMenu3.setText("Schedules");
        jMenuBar1.add(jMenu3);

        jMenu4.setText("Help");
        jMenuBar1.add(jMenu4);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 710, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 227, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jButton6, javax.swing.GroupLayout.DEFAULT_SIZE, 248, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jButton2)
                        .addGap(6, 6, 6))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(2, 2, 2)
                        .addComponent(jButton5)
                        .addGap(18, 18, 18)
                        .addComponent(jButton7)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 113, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel4)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel5)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 44, Short.MAX_VALUE)
                        .addComponent(jButton4, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton3))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 710, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jDestinationDescription, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel1))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 72, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(jProgressBar1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel2, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 492, Short.MAX_VALUE))
                        .addGap(16, 16, 16)))
                .addGap(24, 24, 24))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton1)
                    .addComponent(jButton6)
                    .addComponent(jButton2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 147, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jDestinationDescription)
                    .addComponent(jLabel2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1)
                    .addComponent(jProgressBar1, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 326, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jButton7)
                        .addComponent(jButton5)
                        .addComponent(jButton3)
                        .addComponent(jButton4))
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel3)
                        .addComponent(jLabel5)
                        .addComponent(jLabel4)))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    // menu exit
    private void jMenuItem1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem1ActionPerformed
	    // TODO add your handling code here:
	    this.schedule.writeSchedule();
	    System.exit(0);
    }//GEN-LAST:event_jMenuItem1ActionPerformed

    // menu open (backup schedule object)
    private void jMenuItem2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem2ActionPerformed
	    // TODO add your handling code here:
	    // this is the same operation as clicking the add button
	    int returnVal = jFileChooser4.showOpenDialog(this);
	    if (returnVal == JFileChooser.APPROVE_OPTION) {
		    File file = jFileChooser4.getSelectedFile();

		    if(file.exists()) {
			    this.schedule.loadSchedule(file.getAbsolutePath());
		    }
		    
	    }
    }//GEN-LAST:event_jMenuItem2ActionPerformed


    // update output textarea window
    public void textAreaAppend(String string) {
        this.jTextArea1.append(string);
        this.jTextArea1.setCaretPosition(this.jTextArea1.getDocument().getLength());
    }


    // update the progress bar
    public void incrementProgress() {
        if (progress > total) {
            progress = total;
        } else {
            this.progress++;
        }
        float percent = (float)progress / (float)total;
        int value = (int)(percent * 100);
        this.jProgressBar1.setValue(value);
        this.jProgressBar1.setString(Integer.toString(value) + "%");
    }

    // set progress bar text
    public void setProgressText(String string) {
        this.jProgressBar1.setString(string);
    }

    // set progress bar total 
    public void setProgressTotal(int total) {
        this.total = total;
    }


    // set progress bar progress 
    public void setProgress(int progress) {
        this.progress = progress;
    }


    // enable/disable the backup buttons
    public void backupEnable(boolean action) {
        this.jButton3.setEnabled(action);
        this.jButton4.setEnabled(action);
        this.jButton5.setEnabled(action);
        this.jButton7.setEnabled(action);
        if(!action) {
            this.jLabel3.setEnabled(action);
            this.jLabel4.setEnabled(action);
            this.jLabel5.setEnabled(action);
        } else {
            this.updateFields();
        }
    }


   
    // backup action
    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
	    // TODO add your handling code here:
	    // get cygformatted destdir
	    String dest_dir;
	    ArrayList<String> src_dir_list;

	    jTextArea1.setText("");

	    if (this.schedule.getDestinationDirectory() == null) {
		    jTextArea1.append("No destination directory defined.\n");
		    return;
	    }

	    dest_dir = this.schedule.getDestinationDirectoryCygPath();
	    dest_dir += "/";

	    src_dir_list = this.schedule.getBackupListCygPath();

	    if(src_dir_list != null && src_dir_list.size() != 0) {
		    Thread backup_thread = new Thread(new BackupThread(src_dir_list, dest_dir, this));
		    backup_thread.start();
	    } else {
		    jTextArea1.append("No source entries.");
		    return;
	    }

		

    }//GEN-LAST:event_jButton3ActionPerformed

    // set destination directory
    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
	    // TODO add your handling code here:
	    // update the label text
	    int returnVal = jFileChooser2.showOpenDialog(this);
	    if (returnVal == JFileChooser.APPROVE_OPTION) {
		    File file = jFileChooser2.getSelectedFile();
		    String filename = file.getAbsolutePath();
		    schedule.setDestinationDirectory(filename);
		    this.updateFields();
		    System.out.println("Destination Directory set to: " + file.getAbsolutePath());
	    }
    }//GEN-LAST:event_jButton2ActionPerformed

    // add files and dirs to schedule
    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
	    // TODO add your handling code here:
            // initially we add a check box to jScrollPane
	    int returnVal = jFileChooser1.showOpenDialog(this);
	    if (returnVal == JFileChooser.APPROVE_OPTION) {
		File file = jFileChooser1.getSelectedFile();
		this.schedule.addBackupList(file.getAbsolutePath(),true);
		this.updateFields();
            System.out.println("Added file to schedule: " + file.getAbsolutePath());
	    } else {
            System.out.println("File access cancelled by user.");
	    }
    }//GEN-LAST:event_jButton1ActionPerformed

    // close button
    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
	    // TODO add your handling code here:
	    jMenuItem1ActionPerformed(evt);
    }//GEN-LAST:event_jButton4ActionPerformed

    // nothing
    private void jMenu1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenu1ActionPerformed
	    // TODO add your handling code here:
    }//GEN-LAST:event_jMenu1ActionPerformed

    // save schedule object
    // clear button
    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
	    // TODO add your handling code here:
	    jTextArea1.setText("");
	    this.updateFields();
        this.progress = -1;
        
	    this.incrementProgress();
    }//GEN-LAST:event_jButton5ActionPerformed

    // remove un-selected (un-checked) from backup list
    private void jButton6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton6ActionPerformed
	    // TODO add your handling code here:
	    schedule.writeSchedule();
        TreeMap backupList = (TreeMap<String,Boolean>)schedule.getBackupList();
	    Iterator it = backupList.entrySet().iterator();
	    while(it.hasNext()) {
            Map.Entry entry = (Map.Entry) it.next();
            if (!(Boolean)entry.getValue()) {
                this.schedule.removeBackupList((String)entry.getKey());
            }
	    }
	    this.updateFields();
    }//GEN-LAST:event_jButton6ActionPerformed

    // dry-run mode
    private void jLabel3MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel3MouseClicked
        // TODO add your handling code here:
        schedule.dry_run_mode = true;
        schedule.delete_mode = false;
        schedule.config.setProperty("DRY_RUN_MODE", "true");
        schedule.config.setProperty("DELETE_MODE", "false");
        this.updateFields();
    }//GEN-LAST:event_jLabel3MouseClicked

    // sync-mode
    private void jLabel4MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel4MouseClicked
        // TODO add your handling code here:
        schedule.dry_run_mode = false;
        schedule.config.setProperty("DRY_RUN_MODE", "false");
        this.updateFields();
    }//GEN-LAST:event_jLabel4MouseClicked

    // delete-mode (must be in sync mode)
    private void jLabel5MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel5MouseClicked
        // TODO add your handling code here:
        if (!schedule.dry_run_mode) {
            schedule.delete_mode = !schedule.delete_mode;
            if (schedule.delete_mode == true) {
                schedule.config.setProperty("DELETE_MODE", "true");
            } else {
                schedule.config.setProperty("DELETE_MODE", "false");
            }
        } else {
            schedule.delete_mode = false;
            schedule.config.setProperty("DELETE_MODE", "false");
        }
        this.updateFields();

    }//GEN-LAST:event_jLabel5MouseClicked

    /**
    * @param args the command line arguments
    */
    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new JavaBackup().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JButton jButton6;
    private javax.swing.JButton jButton7;
    private javax.swing.JLabel jDestinationDescription;
    private javax.swing.JFileChooser jFileChooser1;
    private javax.swing.JFileChooser jFileChooser2;
    private javax.swing.JFileChooser jFileChooser3;
    private javax.swing.JFileChooser jFileChooser4;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu3;
    private javax.swing.JMenu jMenu4;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JMenuItem jMenuItem2;
    private javax.swing.JMenuItem jMenuItem4;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JProgressBar jProgressBar1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTextArea jTextArea1;
    // End of variables declaration//GEN-END:variables

}
